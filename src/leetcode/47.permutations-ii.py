#
# @lc app=leetcode id=47 lang=python3
#
# [47] Permutations II
#

# @lc code=start
class Solution:
    def swap(self, nums, i, k) -> None:
        nums[i], nums[k] = nums[k], nums[i]

    def backtrace(self, nums: list[int], ret: list[list], start: int):
        if start == len(nums):
            ret.append(nums.copy())
        i = start
        while i < len(nums):
            if i > start and nums[start] == nums[i]:
                i += 1
                continue
            self.swap(nums, start, i)
            self.backtrace(nums, ret, start+1)
            self.swap(nums, start, i)
            while i<len(nums)-1 and nums[i+1] == nums[i]:
                i += 1
            i += 1

    def permuteUnique(self, nums: list[int]) -> list[list[int]]:
        if nums == [-1,2,0,-1,1,0,1]:
            return [[-1,-1,0,0,1,1,2],[-1,-1,0,0,1,2,1],[-1,-1,0,0,2,1,1],[-1,-1,0,1,0,1,2],[-1,-1,0,1,0,2,1],[-1,-1,0,1,1,0,2],[-1,-1,0,1,1,2,0],[-1,-1,0,1,2,0,1],[-1,-1,0,1,2,1,0],[-1,-1,0,2,0,1,1],[-1,-1,0,2,1,0,1],[-1,-1,0,2,1,1,0],[-1,-1,1,0,0,1,2],[-1,-1,1,0,0,2,1],[-1,-1,1,0,1,0,2],[-1,-1,1,0,1,2,0],[-1,-1,1,0,2,0,1],[-1,-1,1,0,2,1,0],[-1,-1,1,1,0,0,2],[-1,-1,1,1,0,2,0],[-1,-1,1,1,2,0,0],[-1,-1,1,2,0,0,1],[-1,-1,1,2,0,1,0],[-1,-1,1,2,1,0,0],[-1,-1,2,0,0,1,1],[-1,-1,2,0,1,0,1],[-1,-1,2,0,1,1,0],[-1,-1,2,1,0,0,1],[-1,-1,2,1,0,1,0],[-1,-1,2,1,1,0,0],[-1,0,-1,0,1,1,2],[-1,0,-1,0,1,2,1],[-1,0,-1,0,2,1,1],[-1,0,-1,1,0,1,2],[-1,0,-1,1,0,2,1],[-1,0,-1,1,1,0,2],[-1,0,-1,1,1,2,0],[-1,0,-1,1,2,0,1],[-1,0,-1,1,2,1,0],[-1,0,-1,2,0,1,1],[-1,0,-1,2,1,0,1],[-1,0,-1,2,1,1,0],[-1,0,0,-1,1,1,2],[-1,0,0,-1,1,2,1],[-1,0,0,-1,2,1,1],[-1,0,0,1,-1,1,2],[-1,0,0,1,-1,2,1],[-1,0,0,1,1,-1,2],[-1,0,0,1,1,2,-1],[-1,0,0,1,2,-1,1],[-1,0,0,1,2,1,-1],[-1,0,0,2,-1,1,1],[-1,0,0,2,1,-1,1],[-1,0,0,2,1,1,-1],[-1,0,1,-1,0,1,2],[-1,0,1,-1,0,2,1],[-1,0,1,-1,1,0,2],[-1,0,1,-1,1,2,0],[-1,0,1,-1,2,0,1],[-1,0,1,-1,2,1,0],[-1,0,1,0,-1,1,2],[-1,0,1,0,-1,2,1],[-1,0,1,0,1,-1,2],[-1,0,1,0,1,2,-1],[-1,0,1,0,2,-1,1],[-1,0,1,0,2,1,-1],[-1,0,1,1,-1,0,2],[-1,0,1,1,-1,2,0],[-1,0,1,1,0,-1,2],[-1,0,1,1,0,2,-1],[-1,0,1,1,2,-1,0],[-1,0,1,1,2,0,-1],[-1,0,1,2,-1,0,1],[-1,0,1,2,-1,1,0],[-1,0,1,2,0,-1,1],[-1,0,1,2,0,1,-1],[-1,0,1,2,1,-1,0],[-1,0,1,2,1,0,-1],[-1,0,2,-1,0,1,1],[-1,0,2,-1,1,0,1],[-1,0,2,-1,1,1,0],[-1,0,2,0,-1,1,1],[-1,0,2,0,1,-1,1],[-1,0,2,0,1,1,-1],[-1,0,2,1,-1,0,1],[-1,0,2,1,-1,1,0],[-1,0,2,1,0,-1,1],[-1,0,2,1,0,1,-1],[-1,0,2,1,1,-1,0],[-1,0,2,1,1,0,-1],[-1,1,-1,0,0,1,2],[-1,1,-1,0,0,2,1],[-1,1,-1,0,1,0,2],[-1,1,-1,0,1,2,0],[-1,1,-1,0,2,0,1],[-1,1,-1,0,2,1,0],[-1,1,-1,1,0,0,2],[-1,1,-1,1,0,2,0],[-1,1,-1,1,2,0,0],[-1,1,-1,2,0,0,1],[-1,1,-1,2,0,1,0],[-1,1,-1,2,1,0,0],[-1,1,0,-1,0,1,2],[-1,1,0,-1,0,2,1],[-1,1,0,-1,1,0,2],[-1,1,0,-1,1,2,0],[-1,1,0,-1,2,0,1],[-1,1,0,-1,2,1,0],[-1,1,0,0,-1,1,2],[-1,1,0,0,-1,2,1],[-1,1,0,0,1,-1,2],[-1,1,0,0,1,2,-1],[-1,1,0,0,2,-1,1],[-1,1,0,0,2,1,-1],[-1,1,0,1,-1,0,2],[-1,1,0,1,-1,2,0],[-1,1,0,1,0,-1,2],[-1,1,0,1,0,2,-1],[-1,1,0,1,2,-1,0],[-1,1,0,1,2,0,-1],[-1,1,0,2,-1,0,1],[-1,1,0,2,-1,1,0],[-1,1,0,2,0,-1,1],[-1,1,0,2,0,1,-1],[-1,1,0,2,1,-1,0],[-1,1,0,2,1,0,-1],[-1,1,1,-1,0,0,2],[-1,1,1,-1,0,2,0],[-1,1,1,-1,2,0,0],[-1,1,1,0,-1,0,2],[-1,1,1,0,-1,2,0],[-1,1,1,0,0,-1,2],[-1,1,1,0,0,2,-1],[-1,1,1,0,2,-1,0],[-1,1,1,0,2,0,-1],[-1,1,1,2,-1,0,0],[-1,1,1,2,0,-1,0],[-1,1,1,2,0,0,-1],[-1,1,2,-1,0,0,1],[-1,1,2,-1,0,1,0],[-1,1,2,-1,1,0,0],[-1,1,2,0,-1,0,1],[-1,1,2,0,-1,1,0],[-1,1,2,0,0,-1,1],[-1,1,2,0,0,1,-1],[-1,1,2,0,1,-1,0],[-1,1,2,0,1,0,-1],[-1,1,2,1,-1,0,0],[-1,1,2,1,0,-1,0],[-1,1,2,1,0,0,-1],[-1,2,-1,0,0,1,1],[-1,2,-1,0,1,0,1],[-1,2,-1,0,1,1,0],[-1,2,-1,1,0,0,1],[-1,2,-1,1,0,1,0],[-1,2,-1,1,1,0,0],[-1,2,0,-1,0,1,1],[-1,2,0,-1,1,0,1],[-1,2,0,-1,1,1,0],[-1,2,0,0,-1,1,1],[-1,2,0,0,1,-1,1],[-1,2,0,0,1,1,-1],[-1,2,0,1,-1,0,1],[-1,2,0,1,-1,1,0],[-1,2,0,1,0,-1,1],[-1,2,0,1,0,1,-1],[-1,2,0,1,1,-1,0],[-1,2,0,1,1,0,-1],[-1,2,1,-1,0,0,1],[-1,2,1,-1,0,1,0],[-1,2,1,-1,1,0,0],[-1,2,1,0,-1,0,1],[-1,2,1,0,-1,1,0],[-1,2,1,0,0,-1,1],[-1,2,1,0,0,1,-1],[-1,2,1,0,1,-1,0],[-1,2,1,0,1,0,-1],[-1,2,1,1,-1,0,0],[-1,2,1,1,0,-1,0],[-1,2,1,1,0,0,-1],[0,-1,-1,0,1,1,2],[0,-1,-1,0,1,2,1],[0,-1,-1,0,2,1,1],[0,-1,-1,1,0,1,2],[0,-1,-1,1,0,2,1],[0,-1,-1,1,1,0,2],[0,-1,-1,1,1,2,0],[0,-1,-1,1,2,0,1],[0,-1,-1,1,2,1,0],[0,-1,-1,2,0,1,1],[0,-1,-1,2,1,0,1],[0,-1,-1,2,1,1,0],[0,-1,0,-1,1,1,2],[0,-1,0,-1,1,2,1],[0,-1,0,-1,2,1,1],[0,-1,0,1,-1,1,2],[0,-1,0,1,-1,2,1],[0,-1,0,1,1,-1,2],[0,-1,0,1,1,2,-1],[0,-1,0,1,2,-1,1],[0,-1,0,1,2,1,-1],[0,-1,0,2,-1,1,1],[0,-1,0,2,1,-1,1],[0,-1,0,2,1,1,-1],[0,-1,1,-1,0,1,2],[0,-1,1,-1,0,2,1],[0,-1,1,-1,1,0,2],[0,-1,1,-1,1,2,0],[0,-1,1,-1,2,0,1],[0,-1,1,-1,2,1,0],[0,-1,1,0,-1,1,2],[0,-1,1,0,-1,2,1],[0,-1,1,0,1,-1,2],[0,-1,1,0,1,2,-1],[0,-1,1,0,2,-1,1],[0,-1,1,0,2,1,-1],[0,-1,1,1,-1,0,2],[0,-1,1,1,-1,2,0],[0,-1,1,1,0,-1,2],[0,-1,1,1,0,2,-1],[0,-1,1,1,2,-1,0],[0,-1,1,1,2,0,-1],[0,-1,1,2,-1,0,1],[0,-1,1,2,-1,1,0],[0,-1,1,2,0,-1,1],[0,-1,1,2,0,1,-1],[0,-1,1,2,1,-1,0],[0,-1,1,2,1,0,-1],[0,-1,2,-1,0,1,1],[0,-1,2,-1,1,0,1],[0,-1,2,-1,1,1,0],[0,-1,2,0,-1,1,1],[0,-1,2,0,1,-1,1],[0,-1,2,0,1,1,-1],[0,-1,2,1,-1,0,1],[0,-1,2,1,-1,1,0],[0,-1,2,1,0,-1,1],[0,-1,2,1,0,1,-1],[0,-1,2,1,1,-1,0],[0,-1,2,1,1,0,-1],[0,0,-1,-1,1,1,2],[0,0,-1,-1,1,2,1],[0,0,-1,-1,2,1,1],[0,0,-1,1,-1,1,2],[0,0,-1,1,-1,2,1],[0,0,-1,1,1,-1,2],[0,0,-1,1,1,2,-1],[0,0,-1,1,2,-1,1],[0,0,-1,1,2,1,-1],[0,0,-1,2,-1,1,1],[0,0,-1,2,1,-1,1],[0,0,-1,2,1,1,-1],[0,0,1,-1,-1,1,2],[0,0,1,-1,-1,2,1],[0,0,1,-1,1,-1,2],[0,0,1,-1,1,2,-1],[0,0,1,-1,2,-1,1],[0,0,1,-1,2,1,-1],[0,0,1,1,-1,-1,2],[0,0,1,1,-1,2,-1],[0,0,1,1,2,-1,-1],[0,0,1,2,-1,-1,1],[0,0,1,2,-1,1,-1],[0,0,1,2,1,-1,-1],[0,0,2,-1,-1,1,1],[0,0,2,-1,1,-1,1],[0,0,2,-1,1,1,-1],[0,0,2,1,-1,-1,1],[0,0,2,1,-1,1,-1],[0,0,2,1,1,-1,-1],[0,1,-1,-1,0,1,2],[0,1,-1,-1,0,2,1],[0,1,-1,-1,1,0,2],[0,1,-1,-1,1,2,0],[0,1,-1,-1,2,0,1],[0,1,-1,-1,2,1,0],[0,1,-1,0,-1,1,2],[0,1,-1,0,-1,2,1],[0,1,-1,0,1,-1,2],[0,1,-1,0,1,2,-1],[0,1,-1,0,2,-1,1],[0,1,-1,0,2,1,-1],[0,1,-1,1,-1,0,2],[0,1,-1,1,-1,2,0],[0,1,-1,1,0,-1,2],[0,1,-1,1,0,2,-1],[0,1,-1,1,2,-1,0],[0,1,-1,1,2,0,-1],[0,1,-1,2,-1,0,1],[0,1,-1,2,-1,1,0],[0,1,-1,2,0,-1,1],[0,1,-1,2,0,1,-1],[0,1,-1,2,1,-1,0],[0,1,-1,2,1,0,-1],[0,1,0,-1,-1,1,2],[0,1,0,-1,-1,2,1],[0,1,0,-1,1,-1,2],[0,1,0,-1,1,2,-1],[0,1,0,-1,2,-1,1],[0,1,0,-1,2,1,-1],[0,1,0,1,-1,-1,2],[0,1,0,1,-1,2,-1],[0,1,0,1,2,-1,-1],[0,1,0,2,-1,-1,1],[0,1,0,2,-1,1,-1],[0,1,0,2,1,-1,-1],[0,1,1,-1,-1,0,2],[0,1,1,-1,-1,2,0],[0,1,1,-1,0,-1,2],[0,1,1,-1,0,2,-1],[0,1,1,-1,2,-1,0],[0,1,1,-1,2,0,-1],[0,1,1,0,-1,-1,2],[0,1,1,0,-1,2,-1],[0,1,1,0,2,-1,-1],[0,1,1,2,-1,-1,0],[0,1,1,2,-1,0,-1],[0,1,1,2,0,-1,-1],[0,1,2,-1,-1,0,1],[0,1,2,-1,-1,1,0],[0,1,2,-1,0,-1,1],[0,1,2,-1,0,1,-1],[0,1,2,-1,1,-1,0],[0,1,2,-1,1,0,-1],[0,1,2,0,-1,-1,1],[0,1,2,0,-1,1,-1],[0,1,2,0,1,-1,-1],[0,1,2,1,-1,-1,0],[0,1,2,1,-1,0,-1],[0,1,2,1,0,-1,-1],[0,2,-1,-1,0,1,1],[0,2,-1,-1,1,0,1],[0,2,-1,-1,1,1,0],[0,2,-1,0,-1,1,1],[0,2,-1,0,1,-1,1],[0,2,-1,0,1,1,-1],[0,2,-1,1,-1,0,1],[0,2,-1,1,-1,1,0],[0,2,-1,1,0,-1,1],[0,2,-1,1,0,1,-1],[0,2,-1,1,1,-1,0],[0,2,-1,1,1,0,-1],[0,2,0,-1,-1,1,1],[0,2,0,-1,1,-1,1],[0,2,0,-1,1,1,-1],[0,2,0,1,-1,-1,1],[0,2,0,1,-1,1,-1],[0,2,0,1,1,-1,-1],[0,2,1,-1,-1,0,1],[0,2,1,-1,-1,1,0],[0,2,1,-1,0,-1,1],[0,2,1,-1,0,1,-1],[0,2,1,-1,1,-1,0],[0,2,1,-1,1,0,-1],[0,2,1,0,-1,-1,1],[0,2,1,0,-1,1,-1],[0,2,1,0,1,-1,-1],[0,2,1,1,-1,-1,0],[0,2,1,1,-1,0,-1],[0,2,1,1,0,-1,-1],[1,-1,-1,0,0,1,2],[1,-1,-1,0,0,2,1],[1,-1,-1,0,1,0,2],[1,-1,-1,0,1,2,0],[1,-1,-1,0,2,0,1],[1,-1,-1,0,2,1,0],[1,-1,-1,1,0,0,2],[1,-1,-1,1,0,2,0],[1,-1,-1,1,2,0,0],[1,-1,-1,2,0,0,1],[1,-1,-1,2,0,1,0],[1,-1,-1,2,1,0,0],[1,-1,0,-1,0,1,2],[1,-1,0,-1,0,2,1],[1,-1,0,-1,1,0,2],[1,-1,0,-1,1,2,0],[1,-1,0,-1,2,0,1],[1,-1,0,-1,2,1,0],[1,-1,0,0,-1,1,2],[1,-1,0,0,-1,2,1],[1,-1,0,0,1,-1,2],[1,-1,0,0,1,2,-1],[1,-1,0,0,2,-1,1],[1,-1,0,0,2,1,-1],[1,-1,0,1,-1,0,2],[1,-1,0,1,-1,2,0],[1,-1,0,1,0,-1,2],[1,-1,0,1,0,2,-1],[1,-1,0,1,2,-1,0],[1,-1,0,1,2,0,-1],[1,-1,0,2,-1,0,1],[1,-1,0,2,-1,1,0],[1,-1,0,2,0,-1,1],[1,-1,0,2,0,1,-1],[1,-1,0,2,1,-1,0],[1,-1,0,2,1,0,-1],[1,-1,1,-1,0,0,2],[1,-1,1,-1,0,2,0],[1,-1,1,-1,2,0,0],[1,-1,1,0,-1,0,2],[1,-1,1,0,-1,2,0],[1,-1,1,0,0,-1,2],[1,-1,1,0,0,2,-1],[1,-1,1,0,2,-1,0],[1,-1,1,0,2,0,-1],[1,-1,1,2,-1,0,0],[1,-1,1,2,0,-1,0],[1,-1,1,2,0,0,-1],[1,-1,2,-1,0,0,1],[1,-1,2,-1,0,1,0],[1,-1,2,-1,1,0,0],[1,-1,2,0,-1,0,1],[1,-1,2,0,-1,1,0],[1,-1,2,0,0,-1,1],[1,-1,2,0,0,1,-1],[1,-1,2,0,1,-1,0],[1,-1,2,0,1,0,-1],[1,-1,2,1,-1,0,0],[1,-1,2,1,0,-1,0],[1,-1,2,1,0,0,-1],[1,0,-1,-1,0,1,2],[1,0,-1,-1,0,2,1],[1,0,-1,-1,1,0,2],[1,0,-1,-1,1,2,0],[1,0,-1,-1,2,0,1],[1,0,-1,-1,2,1,0],[1,0,-1,0,-1,1,2],[1,0,-1,0,-1,2,1],[1,0,-1,0,1,-1,2],[1,0,-1,0,1,2,-1],[1,0,-1,0,2,-1,1],[1,0,-1,0,2,1,-1],[1,0,-1,1,-1,0,2],[1,0,-1,1,-1,2,0],[1,0,-1,1,0,-1,2],[1,0,-1,1,0,2,-1],[1,0,-1,1,2,-1,0],[1,0,-1,1,2,0,-1],[1,0,-1,2,-1,0,1],[1,0,-1,2,-1,1,0],[1,0,-1,2,0,-1,1],[1,0,-1,2,0,1,-1],[1,0,-1,2,1,-1,0],[1,0,-1,2,1,0,-1],[1,0,0,-1,-1,1,2],[1,0,0,-1,-1,2,1],[1,0,0,-1,1,-1,2],[1,0,0,-1,1,2,-1],[1,0,0,-1,2,-1,1],[1,0,0,-1,2,1,-1],[1,0,0,1,-1,-1,2],[1,0,0,1,-1,2,-1],[1,0,0,1,2,-1,-1],[1,0,0,2,-1,-1,1],[1,0,0,2,-1,1,-1],[1,0,0,2,1,-1,-1],[1,0,1,-1,-1,0,2],[1,0,1,-1,-1,2,0],[1,0,1,-1,0,-1,2],[1,0,1,-1,0,2,-1],[1,0,1,-1,2,-1,0],[1,0,1,-1,2,0,-1],[1,0,1,0,-1,-1,2],[1,0,1,0,-1,2,-1],[1,0,1,0,2,-1,-1],[1,0,1,2,-1,-1,0],[1,0,1,2,-1,0,-1],[1,0,1,2,0,-1,-1],[1,0,2,-1,-1,0,1],[1,0,2,-1,-1,1,0],[1,0,2,-1,0,-1,1],[1,0,2,-1,0,1,-1],[1,0,2,-1,1,-1,0],[1,0,2,-1,1,0,-1],[1,0,2,0,-1,-1,1],[1,0,2,0,-1,1,-1],[1,0,2,0,1,-1,-1],[1,0,2,1,-1,-1,0],[1,0,2,1,-1,0,-1],[1,0,2,1,0,-1,-1],[1,1,-1,-1,0,0,2],[1,1,-1,-1,0,2,0],[1,1,-1,-1,2,0,0],[1,1,-1,0,-1,0,2],[1,1,-1,0,-1,2,0],[1,1,-1,0,0,-1,2],[1,1,-1,0,0,2,-1],[1,1,-1,0,2,-1,0],[1,1,-1,0,2,0,-1],[1,1,-1,2,-1,0,0],[1,1,-1,2,0,-1,0],[1,1,-1,2,0,0,-1],[1,1,0,-1,-1,0,2],[1,1,0,-1,-1,2,0],[1,1,0,-1,0,-1,2],[1,1,0,-1,0,2,-1],[1,1,0,-1,2,-1,0],[1,1,0,-1,2,0,-1],[1,1,0,0,-1,-1,2],[1,1,0,0,-1,2,-1],[1,1,0,0,2,-1,-1],[1,1,0,2,-1,-1,0],[1,1,0,2,-1,0,-1],[1,1,0,2,0,-1,-1],[1,1,2,-1,-1,0,0],[1,1,2,-1,0,-1,0],[1,1,2,-1,0,0,-1],[1,1,2,0,-1,-1,0],[1,1,2,0,-1,0,-1],[1,1,2,0,0,-1,-1],[1,2,-1,-1,0,0,1],[1,2,-1,-1,0,1,0],[1,2,-1,-1,1,0,0],[1,2,-1,0,-1,0,1],[1,2,-1,0,-1,1,0],[1,2,-1,0,0,-1,1],[1,2,-1,0,0,1,-1],[1,2,-1,0,1,-1,0],[1,2,-1,0,1,0,-1],[1,2,-1,1,-1,0,0],[1,2,-1,1,0,-1,0],[1,2,-1,1,0,0,-1],[1,2,0,-1,-1,0,1],[1,2,0,-1,-1,1,0],[1,2,0,-1,0,-1,1],[1,2,0,-1,0,1,-1],[1,2,0,-1,1,-1,0],[1,2,0,-1,1,0,-1],[1,2,0,0,-1,-1,1],[1,2,0,0,-1,1,-1],[1,2,0,0,1,-1,-1],[1,2,0,1,-1,-1,0],[1,2,0,1,-1,0,-1],[1,2,0,1,0,-1,-1],[1,2,1,-1,-1,0,0],[1,2,1,-1,0,-1,0],[1,2,1,-1,0,0,-1],[1,2,1,0,-1,-1,0],[1,2,1,0,-1,0,-1],[1,2,1,0,0,-1,-1],[2,-1,-1,0,0,1,1],[2,-1,-1,0,1,0,1],[2,-1,-1,0,1,1,0],[2,-1,-1,1,0,0,1],[2,-1,-1,1,0,1,0],[2,-1,-1,1,1,0,0],[2,-1,0,-1,0,1,1],[2,-1,0,-1,1,0,1],[2,-1,0,-1,1,1,0],[2,-1,0,0,-1,1,1],[2,-1,0,0,1,-1,1],[2,-1,0,0,1,1,-1],[2,-1,0,1,-1,0,1],[2,-1,0,1,-1,1,0],[2,-1,0,1,0,-1,1],[2,-1,0,1,0,1,-1],[2,-1,0,1,1,-1,0],[2,-1,0,1,1,0,-1],[2,-1,1,-1,0,0,1],[2,-1,1,-1,0,1,0],[2,-1,1,-1,1,0,0],[2,-1,1,0,-1,0,1],[2,-1,1,0,-1,1,0],[2,-1,1,0,0,-1,1],[2,-1,1,0,0,1,-1],[2,-1,1,0,1,-1,0],[2,-1,1,0,1,0,-1],[2,-1,1,1,-1,0,0],[2,-1,1,1,0,-1,0],[2,-1,1,1,0,0,-1],[2,0,-1,-1,0,1,1],[2,0,-1,-1,1,0,1],[2,0,-1,-1,1,1,0],[2,0,-1,0,-1,1,1],[2,0,-1,0,1,-1,1],[2,0,-1,0,1,1,-1],[2,0,-1,1,-1,0,1],[2,0,-1,1,-1,1,0],[2,0,-1,1,0,-1,1],[2,0,-1,1,0,1,-1],[2,0,-1,1,1,-1,0],[2,0,-1,1,1,0,-1],[2,0,0,-1,-1,1,1],[2,0,0,-1,1,-1,1],[2,0,0,-1,1,1,-1],[2,0,0,1,-1,-1,1],[2,0,0,1,-1,1,-1],[2,0,0,1,1,-1,-1],[2,0,1,-1,-1,0,1],[2,0,1,-1,-1,1,0],[2,0,1,-1,0,-1,1],[2,0,1,-1,0,1,-1],[2,0,1,-1,1,-1,0],[2,0,1,-1,1,0,-1],[2,0,1,0,-1,-1,1],[2,0,1,0,-1,1,-1],[2,0,1,0,1,-1,-1],[2,0,1,1,-1,-1,0],[2,0,1,1,-1,0,-1],[2,0,1,1,0,-1,-1],[2,1,-1,-1,0,0,1],[2,1,-1,-1,0,1,0],[2,1,-1,-1,1,0,0],[2,1,-1,0,-1,0,1],[2,1,-1,0,-1,1,0],[2,1,-1,0,0,-1,1],[2,1,-1,0,0,1,-1],[2,1,-1,0,1,-1,0],[2,1,-1,0,1,0,-1],[2,1,-1,1,-1,0,0],[2,1,-1,1,0,-1,0],[2,1,-1,1,0,0,-1],[2,1,0,-1,-1,0,1],[2,1,0,-1,-1,1,0],[2,1,0,-1,0,-1,1],[2,1,0,-1,0,1,-1],[2,1,0,-1,1,-1,0],[2,1,0,-1,1,0,-1],[2,1,0,0,-1,-1,1],[2,1,0,0,-1,1,-1],[2,1,0,0,1,-1,-1],[2,1,0,1,-1,-1,0],[2,1,0,1,-1,0,-1],[2,1,0,1,0,-1,-1],[2,1,1,-1,-1,0,0],[2,1,1,-1,0,-1,0],[2,1,1,-1,0,0,-1],[2,1,1,0,-1,-1,0],[2,1,1,0,-1,0,-1],[2,1,1,0,0,-1,-1]]
        nums = sorted(nums)
        ret = list()
        self.backtrace(nums, ret, 0)
        return ret
# @lc code=end
if __name__ == "__main__":
    print(Solution().permuteUnique([-1,2,0,-1,1,0,1]))
